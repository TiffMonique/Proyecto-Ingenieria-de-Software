{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\OneDrive\\\\Desktop\\\\Proyecto-Ingenieria-de-Software\\\\ProyectoBF\\\\Frontend\\\\src\\\\components\\\\accountBox\\\\loginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { BoldLink, BoxContainer, FieldContainer, FieldError, FormContainer, Input, MutedLink, SubmitButton } from \"./common\";\nimport { Marginer } from \"../marginer\";\nimport { AccountContext } from \"./accountContext\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport swal from \"sweetalert\"; //import { error } from \"./Modal\";\n//Validacion de campos vacios\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  correo: yup.string().required(\"Campo requerido\"),\n  pass: yup.string().required(\"Campo requerido\")\n}); //Componente funcional del Login\n\nexport function LoginForm(props) {\n  _s();\n\n  //Comunica los componentes para luego  pasar de login al registro\n  const {\n    switchToSignup\n  } = useContext(AccountContext); //controlador del formulario se activa cuando se envia el formulario\n\n  const onSubmit = values => {\n    console.log(values);\n  }; //Inicializa los valores del formulario, onsubmit envia la informacion al useFormik y se validan los campos con el validationSchema\n\n\n  const formik = useFormik({\n    initialValues: {\n      correo: \"\",\n      pass: \"\"\n    },\n    validateOnBlur: true,\n    onSubmit,\n    validationSchema: validationSchema\n  });\n  return /*#__PURE__*/_jsxDEV(BoxContainer, {\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      onSubmit: formik.handleSubmit,\n      action: \"/auth\",\n      children: [/*#__PURE__*/_jsxDEV(FieldContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"correo\",\n          id: \"correo\",\n          placeholder: \"Email\",\n          value: formik.values.correo,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FieldError, {\n          children: formik.touched.correo && formik.errors.correo ? formik.errors.correo : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FieldContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"pass\",\n          id: \"pass\",\n          placeholder: \"Password\",\n          value: formik.values.pass,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FieldError, {\n          children: formik.touched.pass && formik.errors.pass ? formik.errors.pass : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MutedLink, {\n        href: \"#\",\n        children: \"\\xBFOlvidaste tu contrase\\xF1a?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Marginer, {\n        direction: \"vertical\",\n        margin: \"1.6em\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        value: \"loginForm\",\n        type: \"submit\",\n        disabled: !formik.isValid,\n        children: \"Iniciar sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marginer, {\n      direction: \"vertical\",\n      margin: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marginer, {\n      direction: \"vertical\",\n      margin: \"1em\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MutedLink, {\n      href: \"#\",\n      children: [\"\\xBFNo tienes una cuenta?\", \" \", /*#__PURE__*/_jsxDEV(BoldLink, {\n        href: \"#\",\n        onClick: switchToSignup,\n        children: \"Registrarse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), \"if(typeof(alert) !== \\\"undefined\\\") \", swal.fire({\n      title: 'alertTitle',\n      text: 'alertMessage',\n      icon: 'alertIcon',\n      showConfirmButton: 'showConfirmButton',\n      timer: 'timer'\n    }).then(() => {\n      window.location = 'ruta';\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)\n  /*if(typeof alert != \"undefined\") {\r\n      swal.fire({\r\n          title:'alertTitle',\r\n          text:'alertMessage',\r\n          icon:'alertIcon',\r\n          showConfirmButton:  showConfirmButton,\r\n          timer: timer,\r\n      }).then(()=>{\r\n          window.location='ruta'\r\n      })\r\n    }*/\n  ;\n}\n\n_s(LoginForm, \"lAid7ZlvMQo+QdJGEIsMSKzjgrs=\", false, function () {\n  return [useFormik];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/Usuario/OneDrive/Desktop/Proyecto-Ingenieria-de-Software/ProyectoBF/Frontend/src/components/accountBox/loginForm.jsx"],"names":["React","useContext","BoldLink","BoxContainer","FieldContainer","FieldError","FormContainer","Input","MutedLink","SubmitButton","Marginer","AccountContext","useFormik","yup","swal","validationSchema","object","correo","string","required","pass","LoginForm","props","switchToSignup","onSubmit","values","console","log","formik","initialValues","validateOnBlur","handleSubmit","handleChange","handleBlur","touched","errors","isValid","fire","title","text","icon","showConfirmButton","timer","then","window","location"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport {\r\n  BoldLink,\r\n  BoxContainer,\r\n  FieldContainer,\r\n  FieldError,\r\n  FormContainer,\r\n  Input,\r\n  MutedLink,\r\n  SubmitButton,\r\n} from \"./common\";\r\nimport { Marginer } from \"../marginer\";\r\nimport { AccountContext } from \"./accountContext\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport  swal from \"sweetalert\";\r\n//import { error } from \"./Modal\";\r\n//Validacion de campos vacios\r\nconst validationSchema = yup.object({\r\n  correo: yup.string().required(\"Campo requerido\"),\r\n  pass: yup.string().required(\"Campo requerido\"),\r\n})\r\n\r\n\r\n//Componente funcional del Login\r\nexport function LoginForm(props) {\r\n  //Comunica los componentes para luego  pasar de login al registro\r\n  const { switchToSignup } = useContext(AccountContext);\r\n\r\n  //controlador del formulario se activa cuando se envia el formulario\r\n  const onSubmit = (values)=>{\r\n    console.log(values);\r\n\r\n  }\r\n\r\n  //Inicializa los valores del formulario, onsubmit envia la informacion al useFormik y se validan los campos con el validationSchema\r\n  const formik = useFormik({initialValues :{correo: \"\", pass:\"\"}, validateOnBlur: true, onSubmit, validationSchema: validationSchema});\r\n\r\n  return (\r\n    <BoxContainer>\r\n      {/*El onSubmit maneja el envio del formulario */}\r\n      <FormContainer onSubmit={formik.handleSubmit} action=\"/auth\">\r\n        <FieldContainer>\r\n        {/*se maneja el estado de las entradas con value={formik.values.correo} y onChange={formik.handleChange}*/}\r\n        <Input type=\"email\"  name=\"correo\" id=\"correo\" placeholder=\"Email\" value={formik.values.correo} onChange={formik.handleChange}  onBlur={formik.handleBlur}/> \r\n        {/*Si hay un error durante la validación formik.touched.correo && formik.errors.correo se lo mostrará al usuario.*/}\r\n        <FieldError>{formik.touched.correo && formik.errors.correo ? formik.errors.correo:\"\"}</FieldError>\r\n        </FieldContainer>\r\n\r\n        <FieldContainer>\r\n        {/*se maneja el estado de las entradas con value={formik.values.pass} y onChange={formik.handleChange} */}\r\n        <Input type=\"password\" name=\"pass\" id=\"pass\" placeholder=\"Password\" value={formik.values.pass} onChange={formik.handleChange} onBlur={formik.handleBlur}/>\r\n        {/*Si hay un error durante la validación formik.touched.pass && formik.errors.pass se lo mostrará al usuario.*/}\r\n        <FieldError>{formik.touched.pass && formik.errors.pass ? formik.errors.pass:\"\"}</FieldError>\r\n        </FieldContainer>\r\n\r\n\r\n      <MutedLink href=\"#\">¿Olvidaste tu contraseña?</MutedLink>\r\n      <Marginer direction=\"vertical\" margin=\"1.6em\" />\r\n      {/*Si los campos estan llenos se inicia seccion con el boton de lo contrario el boton esta deshabilitado */}\r\n      <SubmitButton value=\"loginForm\"   type=\"submit\" disabled={!formik.isValid}>Iniciar sesión</SubmitButton>\r\n      </FormContainer>\r\n      <Marginer direction=\"vertical\" margin={10} />\r\n      <Marginer direction=\"vertical\" margin=\"1em\" />\r\n      <MutedLink href=\"#\">\r\n      ¿No tienes una cuenta?{\" \"}\r\n        {/* Para pasar a Registrarse*/}\r\n        <BoldLink href=\"#\" onClick={switchToSignup}>Registrarse\r\n        </BoldLink>\r\n      </MutedLink>\r\n      if(typeof(alert) !== \"undefined\") {\r\n        swal.fire({\r\n            title:'alertTitle',\r\n            text:'alertMessage',\r\n            icon:'alertIcon',\r\n            showConfirmButton:  'showConfirmButton',\r\n            timer: 'timer',\r\n        }).then(()=>{\r\n            window.location='ruta'\r\n        })\r\n      }\r\n\r\n    </BoxContainer>\r\n\r\n\r\n    /*if(typeof alert != \"undefined\") {\r\n        swal.fire({\r\n            title:'alertTitle',\r\n            text:'alertMessage',\r\n            icon:'alertIcon',\r\n            showConfirmButton:  showConfirmButton,\r\n            timer: timer,\r\n        }).then(()=>{\r\n            window.location='ruta'\r\n        })\r\n      }*/\r\n\r\n  )}"]},"metadata":{},"sourceType":"module"}
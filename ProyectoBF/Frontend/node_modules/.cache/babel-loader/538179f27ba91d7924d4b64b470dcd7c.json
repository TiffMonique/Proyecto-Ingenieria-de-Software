{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\OneDrive\\\\Desktop\\\\PRoyecto clonado\\\\Proyecto-Ingenieria-de-Software\\\\ProyectoBF\\\\Frontend\\\\src\\\\components\\\\accountBox\\\\recoverPasswordForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { BoldLink, BoxContainer, FieldContainer, FieldError, FormContainer, Input, MutedLink, SubmitButton } from \"./common\";\nimport { Marginer } from \"../marginer\";\nimport { AccountContext } from \"./accountContext\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\"; //import axios from \"axios\";\n//import swal from \"sweetalert\";\n//Validacion de campos vacios\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  correo: yup.string().email(\"Por favor ingrese un correo válido\").required(\"El correo es requerido\")\n}); //Componente funcional del Login\n\nexport function RecoverPassword(props) {\n  _s();\n\n  //Comunica los componentes para luego  pasar de login al registro\n  const {\n    switchToSignup\n  } = useContext(AccountContext);\n\n  const onSubmit = values => {\n    alert(JSON.stringify(values));\n  }; //Inicializa los valores del formulario, onsubmit envia la informacion al useFormik y se validan los campos con el validationSchema\n\n\n  const formik = useFormik({\n    initialValues: {\n      correo: \"\",\n      pass: \"\"\n    },\n    validateOnBlur: true,\n    onSubmit,\n    validationSchema: validationSchema\n  });\n  return /*#__PURE__*/_jsxDEV(BoxContainer, {\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FieldContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"correo\",\n          id: \"correo\",\n          placeholder: \"Email\",\n          value: formik.values.correo,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FieldError, {\n          children: formik.touched.correo && formik.errors.correo ? formik.errors.correo : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marginer, {\n        direction: \"vertical\",\n        margin: \"1.6em\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        type: \"submit\",\n        disabled: !formik.isValid,\n        children: \"Enviar Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Marginer, {\n      direction: \"vertical\",\n      margin: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Marginer, {\n      direction: \"vertical\",\n      margin: \"1em\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MutedLink, {\n      href: \"#\",\n      children: /*#__PURE__*/_jsxDEV(BoldLink, {\n        href: \"#\",\n        onClick: switchToSignup,\n        children: \"Enviar Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecoverPassword, \"lAid7ZlvMQo+QdJGEIsMSKzjgrs=\", false, function () {\n  return [useFormik];\n});\n\n_c = RecoverPassword;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecoverPassword\");","map":{"version":3,"sources":["C:/Users/Usuario/OneDrive/Desktop/PRoyecto clonado/Proyecto-Ingenieria-de-Software/ProyectoBF/Frontend/src/components/accountBox/recoverPasswordForm.jsx"],"names":["React","useContext","BoldLink","BoxContainer","FieldContainer","FieldError","FormContainer","Input","MutedLink","SubmitButton","Marginer","AccountContext","useFormik","yup","validationSchema","object","correo","string","email","required","RecoverPassword","props","switchToSignup","onSubmit","values","alert","JSON","stringify","formik","initialValues","pass","validateOnBlur","handleSubmit","handleChange","handleBlur","touched","errors","isValid"],"mappings":"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","sourcesContent":["import React, { useContext} from \"react\";\r\nimport {\r\nBoldLink,\r\nBoxContainer,\r\nFieldContainer,\r\nFieldError,\r\nFormContainer,\r\nInput,\r\nMutedLink,\r\nSubmitButton,\r\n} from \"./common\";\r\nimport { Marginer } from \"../marginer\";\r\nimport { AccountContext } from \"./accountContext\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n//import axios from \"axios\";\r\n//import swal from \"sweetalert\";\r\n\r\n//Validacion de campos vacios\r\nconst validationSchema = yup.object({\r\n  correo : yup.string().email(\"Por favor ingrese un correo válido\").required(\"El correo es requerido\"),\r\n\r\n})\r\n\r\n\r\n//Componente funcional del Login\r\nexport function RecoverPassword(props) {\r\n  //Comunica los componentes para luego  pasar de login al registro\r\n    const { switchToSignup } = useContext(AccountContext);\r\n    const onSubmit = (values) =>{\r\n      alert(JSON.stringify(values));\r\n    }\r\n\r\n\r\n  //Inicializa los valores del formulario, onsubmit envia la informacion al useFormik y se validan los campos con el validationSchema\r\n    const formik = useFormik({initialValues :{correo: \"\", pass:\"\"}, validateOnBlur: true, onSubmit, validationSchema: validationSchema});\r\n\r\nreturn (\r\n    <BoxContainer>\r\n      {/*El onSubmit maneja el envio del formulario */}\r\n    <FormContainer onSubmit={formik.handleSubmit}>\r\n        <FieldContainer>\r\n        {/*se maneja el estado de las entradas con value={formik.values.correo} y onChange={formik.handleChange}*/}\r\n        <Input type=\"email\"  name=\"correo\" id=\"correo\" placeholder=\"Email\" value={formik.values.correo} onChange={formik.handleChange}  onBlur={formik.handleBlur}/> \r\n        {/*Si hay un error durante la validación formik.touched.correo && formik.errors.correo se lo mostrará al usuario.*/}\r\n        <FieldError>{formik.touched.correo && formik.errors.correo ? formik.errors.correo:\"\"}</FieldError>\r\n        </FieldContainer>\r\n    <Marginer direction=\"vertical\" margin=\"1.6em\" />\r\n      {/*Si los campos estan llenos se inicia seccion con el boton de lo contrario el boton esta deshabilitado */}\r\n    <SubmitButton type=\"submit\" disabled={!formik.isValid}>Enviar Contraseña</SubmitButton>\r\n    </FormContainer>\r\n    <Marginer direction=\"vertical\" margin={10} />\r\n    <Marginer direction=\"vertical\" margin=\"1em\" />\r\n    <MutedLink href=\"#\">\r\n\r\n        {/* Para pasar a Registrarse*/}\r\n        <BoldLink href=\"#\" onClick={switchToSignup}>Enviar Contraseña\r\n        </BoldLink>\r\n    </MutedLink>\r\n    </BoxContainer>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}